name: Terraform Deployment

on:
  workflow_dispatch:
env:
  ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.TENANT_ID }} 
  ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}

jobs:
  configuration:
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Azure Login
      run: az login --service-principal -u ${{ secrets.CLIENT_ID }} -p ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}
    
    - name: Terraform Init
      run: terraform init

      # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: |
        if ! terraform fmt -recursive; then
          echo "Please format your Terraform code"
        else
          echo "The Terraform code is well formated"
        fi

      # Validate terraform files
    - name: Terraform Validate
      run: |
        for dir in */; do
            if [ -d "$dir" ]; then
                cd "$dir"
                echo "Running terraform init in $dir"
                terraform init
                echo "Running terraform validate in $dir"
                terraform validate
                if [ $? -ne 0 ]; then
                    echo "Terraform validate fails in $dir"
                    exit 1
                fi
                cd ../
            fi
        done
    
      # Perform a security scan of the terraform code using checkov
    - name: Run Checkov action
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with: 
        framework: terraform
      continue-on-error: true
  
  plan:
    runs-on: self-hosted
    needs: configuration 
    steps:
      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan
          terraform show -json tfplan > tfplan.json
          cat tfplan.json  # Display plan output

      # Save the plan file as artifact in the job
      - name: Save Plan as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan
          path: tfplan.json
  
  create_pr:
    runs-on: self-hosted
    needs: plan
    steps:

      - name: Create PR
        run: |
          # Set GitHub repository and branch names
          REPO_OWNER="${{ github.repository_owner }}"
          REPO_NAME="${{ github.event.repository.name }}"
          BASE_BRANCH="main"
          HEAD_BRANCH="${{ github.ref }}"
          
          # Get the workflow run URL
          RUN_URL="https://github.com/${REPO_OWNER}/${REPO_NAME}/actions/runs/${{ github.run_id }}"
          
          # Create a pull request and include a link to the current workflow run in the pull request body
          gh pr create --title "TF PR ${{ github.run_id }}" \
            --body "Please review the changes. You can find the details of this workflow run [here](${RUN_URL})." \
            --base "$BASE_BRANCH" --head "$HEAD_BRANCH" --repo "$REPO_OWNER/$REPO_NAME"
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}